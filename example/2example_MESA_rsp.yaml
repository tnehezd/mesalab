# example_MESA.yaml
# Configuration for mesalab - Example Analysis Workflow

# --- Required Input/Output Paths ---
# These are essential for mesalab to find your MESA data and save results.
# IMPORTANT: Replace these with your actual paths!

# --- General Settings ---
general_settings:
  # The base directory containing your MESA run subdirectories (e.g., '1.0M_solar/Z0.01/'),
  # each with its 'LOGS' and 'profiles.data' files.
  input_dir: "MESA_grid"

  # The base directory where all mesalab outputs (analysis results, plots, GYRE output) will be saved.
  output_dir: "MESA_grid_output"

  # The common part of your MESA inlist filename (e.g., 'inlist_project' if your inlist is 'inlist_project').
  # Used to identify relevant run directories.
  inlist_name: "inlist_project"

  # If you've run a full analysis before and the 'detail_z*.csv' files exist,
  # set this to 'false' to skip re-processing the detailed MESA profiles, speeding things up.
  # Set to 'true' to force a complete reanalysis from scratch, recalculating all derived quantities.
  force_reanalysis: True

  # Set to 'true' for highly verbose logging output (DEBUG level) suitable for development and troubleshooting.
  # Set to 'false' to reduce log verbosity, showing only INFO, WARNING, ERROR, and CRITICAL messages for regular operation.
  debug: False

  # --- Optional: MESA SDK and GYRE Installation Paths ---
  # These can also be set via environment variables (MESASDK_ROOT and GYRE_DIR).
  # If defined here, they will override environment variables or default system PATH lookups.
  # mesasdk_root: /path/to/your/mesasdk_root # e.g., /home/user/mesa-r22.05
  # gyre_dir: /path/to/your/gyre_installation_bin_directory # e.g., /home/user/gyre/bin (ensure this points to the 'bin' folder)

# --- Analysis Options ---
blue_loop_analysis:
  # This is CRITICAL for blue loop plotting. Setting this to 'true' ensures
  # the detailed blue loop analysis data is generated and processed.
  analyze_blue_loop: True

  # Defines the columns saved in the detailed blue loop CSV files.
  # 'all' saves all relevant columns from the blue loop phase.
  # 'summary' saves only a condensed set of key columns (e.g., star_age, log_Teff, log_L).
  blue_loop_output_type: "summary"

# --- Plotting Specific Settings ---
plotting_settings:
  # Set to 'true' to enable heatmap generation for cross-grid data (if applicable).
  generate_heatmaps: False

  # This controls the generation of the main HR diagrams for your MESA tracks.
  # Options:
  #   - 'none': (or omit this line entirely) Does NOT generate HR diagrams.
  #   - 'all': Generates standard HRDs with full evolutionary tracks (including pre-main sequence).
  #   - 'drop_zams': Generates HRDs where the pre-main sequence (ZAMS) phase is trimmed,
  #                  focusing on the post-ZAMS evolution.
  generate_hr_diagrams: "none"

  # Set to 'true' to generate specific blue loop HRD/CMD/logg-L plots
  # that include bolometric corrections, providing detailed visual analysis
  # of the blue loop phase. Requires 'analyze_blue_loop: True'.
  generate_blue_loop_plots_with_bc: False


# --- GYRE Workflow Specific Settings ---
# This section controls the execution of the GYRE pulsation analysis.
gyre_workflow:
  # Set to 'true' to enable and execute the full GYRE workflow.
  # If 'false', all other GYRE settings in this section will be ignored.
  run_gyre_workflow: False


# --- RSP Workflow Specific Settings ---
# This section controls the execution of MESA RSP module.
rsp_workflow:
  # Set to 'true' to enable and execute the full RSP workflow.
  # If 'false', all other RSP settings in this section will be ignored.
  run_rsp_workflow: true

  # The path to the inlist_rsp template file. This can be an absolute path
  # (e.g., '/home/user/my_rsp_templates/my_rsp_inlist') or a path relative to where
  # you run the mesalab command (e.g., 'config/rsp.inlist_template.in').
  # mesalab will read this template, insert the MESA profile path, and create a
  # temporary inlist for each RSP run.
  rsp_inlist_template_path: "../config/rsp.inlist_template"

  # The subdirectory within 'output_dir' where all RSP runs will be stored
  # within 'output_dir'.
  rsp_output_subdir: "./rsp_outputs"

  # Set to 'true' to enable parallel execution of multiple RSP runs simultaneously.
  # This is highly recommended for large grids to speed up the workflow.
  # If 'false', RSP runs will be executed sequentially.
  enable_rsp_parallel: true

  # The number of OpenMP threads that each *individual* RSP process should use.
  # This affects the performance of a single RSP calculation.
  num_rsp_threads: 1

  rsp_run_timeout: 10

  # When 'enable_parallel' is 'true', this specifies the maximum number of
  # concurrent RSP processes that mesalab will launch at any given time.
  # Adjust this based on your system's CPU core count and available RAM.
  max_concurrent_rsp_runs: 4 # Typically 1-2x your number of physical CPU cores